#!/usr/bin/env python3
"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
"""
import asyncio
import sys
import os
from pathlib import Path

# ‡πÄ‡∏û‡∏¥‡πà‡∏° path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root / "src"))

async def test_models():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà"""
    
    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏î‡∏à‡∏≥‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
    print("=" * 60)
    
    try:
        # Import service
        from ai_services.face_recognition.face_recognition_service import FaceRecognitionService
        
        print("\n1. üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•:")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á service instance
        config = {
            "preferred_model": "facenet",
            "similarity_threshold": 0.50,
            "unknown_threshold": 0.40,
            "enable_gpu_optimization": True,
        }
        
        service = FaceRecognitionService(config=config)
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏°‡πÄ‡∏î‡∏•
        print(f"   ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ: {service.current_model_type}")
        print(f"   ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {list(service.model_configs.keys())}")
        
        print("\n2. üîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•:")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
        success = await service.initialize()
        if success:
            print("   ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            print(f"   ‚úÖ ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {service.current_model_type.value}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÑ‡∏ü‡∏•‡πå
            current_config = service.model_configs[service.current_model_type]
            model_path = current_config["model_path"]
            if os.path.exists(model_path):
                size_mb = os.path.getsize(model_path) / (1024 * 1024)
                print(f"   ‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏•: {model_path} ({size_mb:.1f} MB)")
            else:
                print(f"   ‚ùå ‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÑ‡∏°‡πà‡∏û‡∏ö: {model_path}")
        else:
            print("   ‚ùå ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
        print("\n3. üéØ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Multi-Framework:")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö multi-framework
        service_multi = FaceRecognitionService(
            config=config,
            enable_multi_framework=True,
            frameworks=None  # Auto-detect
        )
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô multi-framework
        print(f"   Multi-framework enabled: {service_multi.enable_multi_framework}")
        if hasattr(service_multi, 'get_available_frameworks'):
            try:
                frameworks = service_multi.get_available_frameworks()
                print(f"   Available frameworks: {frameworks}")
            except:
                print("   Available frameworks: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        
        print("\n4. üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
        print("   ‚úÖ ‡πÇ‡∏°‡πÄ‡∏î‡∏• ONNX ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà")
        print("   ‚úÖ FaceNet ‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        print("   ‚úÖ Multi-framework ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß")
        print("   ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡πâ")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_models())
