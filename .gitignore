# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Model files (ไฟล์โมเดลขนาดใหญ่ - จะโหลดอัตโนมัติใน Docker)
model/
*.onnx
*.pt
*.pth
*.h5
*.pb
*.tflite
*.weights

# Test images (รูปภาพทดสอบ)
test_images/
*.jpg
*.jpeg
*.png
*.bmp
*.tiff
*.gif

# Frontend dependencies และ build files
projec-final-fronend/node_modules/
projec-final-fronend/.next/
projec-final-fronend/out/
projec-final-fronend/build/
projec-final-fronend/dist/
projec-final-fronend/.env.local
projec-final-fronend/.env.production
projec-final-fronend/.vercel
projec-final-fronend/.turbo
projec-final-fronend/coverage/

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.*.local
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to exclude the gitignore file itself from the
#  project's .gitignore file.
.idea/

# Visual Studio Code
.vscode/
*.swp
*.swo

# Operating System Files
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Model files - exclude all AI models (they're large)
model/
models/
*.pt
*.onnx
*.pth
*.pkl
*.h5
*.pb
*.tflite
*.safetensors
*.bin
*.model
*.weights

# Logs - IMPORTANT: These cause reload loops
logs/
*.log
*.log.*
log/

# Temporary files - IMPORTANT: These cause reload loops  
temp/
tmp/
*.tmp
*.temp
.tmp/

# Output files - IMPORTANT: These cause reload loops
output/
outputs/
results/
*.out

# Cache files
.cache/
*.cache
cache/

# Database files
*.db
*.sqlite
*.sqlite3

# Image uploads and test files
uploads/
test_images/
data/
dataset/
datasets/
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.webp
*.svg

# Video files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.mkv

# Audio files  
*.mp3
*.wav
*.flac
*.aac
*.m4a

# Compressed files
*.zip
*.rar
*.7z
*.tar.gz
*.tar.bz2
*.tar.xz

# Node.js (if any frontend exists)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Docker
.dockerignore
*.dockerfile
docker-compose.override.yml

# Backup files
*.bak
*.backup
*.old
*.orig
*~

# Secrets and API keys
secrets/
.secrets
*.key
*.pem
*.crt
*.p12
api_keys.txt
config.json
credentials.json

# Configuration files with sensitive data
config/production.yml
config/staging.yml
.env.production
.env.staging

# Face Recognition System specific
# Gallery and face database files
gallery/
faces/
embeddings/
face_db/

# VRAM and performance logs
vram_log.txt
performance_*.json

# Development and debugging
debug/
dev/
playground/
sandbox/
experiments/

# Documentation build files
docs/build/
docs/_build/
site/

# Profiling output
*.prof
*.profile

# Memory dumps
*.dump
*.dmp

# Core dumps
core.*

# Jupyter Notebook specific
.ipynb_checkpoints/
*.ipynb

# VS Code workspace files
*.code-workspace

# Local development overrides
local_config.py
local_settings.py
override_config.yml

# System monitoring files
*.pid
*.sock
*.lock

# SSL certificates (if any)
*.crt
*.key
*.pem
*.p12
ssl/
certs/

# Custom exclusions for this project
face_test_output/
bulk_test_results/
analysis_results/
detection_results/
recognition_results/

# IDE specific files
.vscode/settings.json
.idea/
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store?
Icon?
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific temporary files
start_*.log
setup_*.log
test_run_*.json

# Note: Test files are included in repository for development purposes

# Large report files - keep local but not in git
*_troubleshooting_report.json
framework_troubleshooting_report.json
*_report.json
framework_*.json
*.report
large_reports/