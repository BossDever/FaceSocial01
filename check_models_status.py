#!/usr/bin/env python3
"""
‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô - ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏∂‡πà‡∏á import
"""
import os
import json

def check_model_status():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"""
    
    print("üîç ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Face Recognition")
    print("=" * 70)
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏• ONNX
    print("\n1. üì¶ ‡πÇ‡∏°‡πÄ‡∏î‡∏• ONNX ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (Custom Models):")
    onnx_models = {
        "FaceNet": "model/face-recognition/facenet_vggface2.onnx",
        "AdaFace": "model/face-recognition/adaface_ir101.onnx", 
        "ArcFace": "model/face-recognition/arcface_r100.onnx"
    }
    
    onnx_available = 0
    for name, path in onnx_models.items():
        if os.path.exists(path):
            size_mb = os.path.getsize(path) / (1024 * 1024)
            print(f"   ‚úÖ {name}: {size_mb:.1f} MB - ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
            onnx_available += 1
        else:
            print(f"   ‚ùå {name}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πà Multi-Framework
    print("\n2. üîß ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πà Multi-Framework:")
    frameworks = {
        "DeepFace": "deepface",
        "FaceNet-PyTorch": "facenet_pytorch",
        "Dlib": "dlib", 
        "InsightFace": "insightface",
        "EdgeFace": "edge_face"
    }
    
    framework_available = 0
    for name, module_name in frameworks.items():
        try:
            __import__(module_name)
            print(f"   ‚úÖ {name}: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß")
            framework_available += 1
        except ImportError:
            print(f"   ‚ùå {name}: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå config
    print("\n3. ‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö:")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ô service file
    service_file = "src/ai_services/face_recognition/face_recognition_service.py"
    if os.path.exists(service_file):
        with open(service_file, 'r', encoding='utf-8') as f:
            content = f.read()
            
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        if 'preferred_model=RecognitionModel(config.get("preferred_model", "facenet"))' in content:
            print("   ‚úÖ ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: FaceNet (ONNX)")
        
        if 'enable_multi_framework' in content:
            print("   ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Multi-Framework")
        
        if 'model_configs' in content and 'facenet_vggface2.onnx' in content:
            print("   ‚úÖ ‡πÇ‡∏°‡πÄ‡∏î‡∏• ONNX ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö logs
    print("\n4. üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Logs:")
    log_file = "logs/app.log"
    if os.path.exists(log_file):
        with open(log_file, 'r', encoding='utf-8') as f:
            logs = f.read()
        
        if "Enhanced Face Recognition Service initialized" in logs:
            print("   ‚úÖ Service ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
        
        if "Recommended model for general use: facenet" in logs:
            print("   ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ä‡πâ FaceNet")
            
        if "3/3 models available" in logs:
            print("   ‚úÖ ‡πÇ‡∏°‡πÄ‡∏î‡∏• ONNX ‡∏ó‡∏±‡πâ‡∏á 3 ‡∏ï‡∏±‡∏ß‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    
    # ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
    print("\n" + "=" * 70)
    print("üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:")
    print(f"   ‚Ä¢ ‡πÇ‡∏°‡πÄ‡∏î‡∏• ONNX ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {onnx_available}/3 ‡πÇ‡∏°‡πÄ‡∏î‡∏•")
    print(f"   ‚Ä¢ ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πà Multi-Framework: {framework_available}/{len(frameworks)} ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πà")
    
    if onnx_available == 3:
        print("   ‚úÖ ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥")
    
    if framework_available > 0:
        print("   ‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ")
        
    print("\nüéØ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö: ‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ö‡∏ö")
    print("   ‚Ä¢ ‡πÇ‡∏°‡πÄ‡∏î‡∏• ONNX ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏´‡∏•‡∏±‡∏Å")
    print("   ‚Ä¢ ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πà Multi-Framework ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡∏¥‡∏°")
    print("   ‚Ä¢ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ")

if __name__ == "__main__":
    check_model_status()
